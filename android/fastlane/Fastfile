default_platform(:android)

platform :android do
  desc 'Runs all the tests'
  lane :test do
    gradle(task: 'test')
  end

  desc 'Submit a new Android Build to FAD'
  lane :ship do |options|
    flavor = options[:flavor]
    puts "Selected flavors = #{flavor}"
    build_type = options[:build_type]
    puts "Selected build_type = #{build_type}"
    build_name = options[:build_name]
    puts "Selected build_name = #{build_name}"
    build_number = options[:build_number]
    puts "Selected build_number = #{build_number}"
    fad_upload = options[:fad_upload]
    puts "Selected fad_upload = #{fad_upload}"
    playstore_upload = options[:playstore_upload]
    puts "Selected playstore_upload = #{playstore_upload}"
    # default for prod
    package_name = 'com.themobitech.cicdpoc'
    firebase_app_id = '1:561779125994:android:844b58a3f389dca841f193'
    if flavor == "Dev"
      package_name = 'com.themobitech.cicdpoc'
      firebase_app_id = '1:561779125994:android:844b58a3f389dca841f193'
    elsif flavor == "PreProd"
      package_name = 'com.themobitech.cicdpoc'
      firebase_app_id = '1:561779125994:android:844b58a3f389dca841f193'
    end
    puts "package_name #{package_name}"
    puts "firebase_app_id #{firebase_app_id}"
    if (playstore_upload)
      task = "clean bundle#{flavor}"
      puts "Generating Bundle File for Play Store Task #{task}"
      build_android_app(
        task: "#{task}",
        build_type: "#{build_type}",
        print_command: true,
        properties: {
          "android.injected.version.code" => "#{build_number}",
          "android.injected.version.name" => "#{build_name}",
        }
      )
      upload_to_play_store(
        package_name: "#{package_name}",
        track: 'internal',
        release_status: 'draft',
        skip_upload_metadata: true,
        skip_upload_images: true,
        skip_upload_changelogs: true,
        aab: "../build/app/outputs/bundle/#{flavor}#{build_type}/app-#{flavor}-#{build_type}.aab",
        json_key: './play_store_service_account.json',
      )
    end
    if (fad_upload)
      task = "assemble#{flavor}"
      puts "Generating APK File for FAD Task #{task}"
      build_android_app(
        task: "#{task}",
        build_type: "#{build_type}",
        print_command: true,
        properties: {
          "android.injected.version.code" => "#{build_number}",
          "android.injected.version.name" => "#{build_name}",
        }
      )
      firebase_app_distribution(
        app: "#{firebase_app_id}",
        # testers_file: 'fastlane/testers_file.txt',
        # release_notes_file: 'fastlane/release_notes.txt',
        service_credentials_file:	'../android/firebase_service_account_credentials_file.json',
        android_artifact_type: 'APK',
        android_artifact_path: "../build/app/outputs/apk/#{flavor}/#{build_type}/app-#{flavor}-#{build_type}.apk",
        debug: true
      )
    end
  end
end
