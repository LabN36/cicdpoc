name: FAD deployment
on:
  push:
    branches:
      - main
jobs:
  build_android:
    name: Building Android 
    runs-on: ubuntu-latest
    steps:

      - name: Cache Flutter
        id: flutterCache
        uses: actions/cache@v3
        with:
          path: ~/
          key: ${{ runner.OS }}-fllutter-cache
          # restore-keys: |
          #   ${{ runner.OS }}-flutter-cache
      


      - name: Setup Flutter
        if: steps.flutterCache.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v1
        with:
          flutter-version: 3.7.12
        
      - name: Setup Ruby
        if: steps.flutterCache.outputs.cache-hit != 'true'
        uses: ruby/setup-ruby@v1
        with:
            ruby-version: '3.0'
            bundler-cache: true

      - name: Setup Java
        if: steps.flutterCache.outputs.cache-hit != 'true'
        uses: actions/setup-java@v1
        with:
          java-version: 11
    
      - name: Check JAVA Version
        run: |
            which java
            which flutter
            which ruby
            which fastlane
            echo $JAVA_HOME

      - uses: actions/checkout@v3
      - name: Checkout Source Code
        env:
          KEYPROPERTIES: ${{ secrets.KEYPROPERTIES }}
          STOREFILE: ${{ secrets.STOREFILE }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
          SERVICECREDENTIALFILE: ${{ secrets.SERVICECREDENTIALFILE }}
        run: |
          export ARTIFACT_NAME="android-file-$(date +'%Y-%m-%dT-%H-%M')"
          echo "$KEYPROPERTIES" > android/key.properties.asc
          echo "$STOREFILE" > android/keystorefile.jks.asc
          echo "$SERVICECREDENTIALFILE" > android/firebaseadmin.json.asc
          gpg -d --passphrase $PASSPHRASE --batch android/key.properties.asc > android/key.properties
          gpg -d --passphrase $PASSPHRASE --batch android/keystorefile.jks.asc > android/keystorefile.jks
          gpg -d --passphrase $PASSPHRASE --batch android/firebaseadmin.json.asc > android/firebaseadmin.json

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Setup Fastlane
        working-directory: ./android
        run: bundle install

      - name: Run Fastlane
        working-directory: ./android
        run: bundle exec fastlane fad

      - uses: actions/upload-artifact@v4
        with:
           name: $ARTIFACT_NAME
           path: |
            build/app/outputs/apk/
